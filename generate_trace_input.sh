#!/usr/bin/env bash

# Change these variables to match the program you are trying to trace functions.

header="tracefunc.h"            # To be autogenerated. Will hold trace function names.
trace_file="trace.out"            # Where should your tracing results go?

# Anything else to trace?
# Separate each name with a space.
external_libraries="lib/libProcessLib.so lib/libMaterialLib.so"

# Which functions are you looking for?
# Separate each name with a pipe '|'
# (regular expression syntax)
whitelist_functions="ProcessLib.*SmallDeformationNonlocal.*ssemble|MaterialLib.*Solids"
blacklist_functions="NewtonRaphson"

# Where is your main executable?
# You should compile the main executable at least once 
# without tracing before running this script.
# We will probe the executable for the functions 
# addresses that you are interested in tracing.
main_program="bin/ogs"

echo "Configuration:"
echo "================="
echo "Runtime tracing results will go to $trace_file"

if [ -e ${main_program} ] ; then
    echo "Main program will be is: $main_program"
else
    echo "Error: Main program \"${main_program}\" does not exist. Please compile it at least once before attempting to trace it."
    exit 1
fi

if [ x"$external_libraries" != x ] ; then
    for lib in ${external_libraries} ; do
        if [ ! -e $lib ] ; then
            echo "Error: External library does not exist, try again: $lib"
            exit 1
        fi
    done
fi

echo -e "Will also trace external libraries:\n$external_libraries\n"

if [ "$(echo "${whitelist_functions}" | wc -w)" -gt 1 ] ; then
    echo "Error: list of whitelisted functions cannot contain spaces. Function names must be separated by the '|' pipe character. Try again."
    exit 1
fi

if [ "$(echo "${blacklist_functions}" | wc -w)" -gt 1 ] ; then
    echo "Error: list of blacklisted functions cannot contain spaces. Function names must be separated by the '|' pipe character. Try again."
    exit 1
fi

echo "Generating $header input file for tracing..."

rm -f $header

cat << EOF > $header
/* 
 * AUTO GENERATED FILE. DO NOT MODIFY.
 * 
 * USE "generate_trace_input.sh" script to create this file.
 */

/*
 * Where should the result output trace contents should be written to?
 */
static const char * matches[] = {
EOF

echo "Outputting whitelisted matches from $whitelist_functions ..."

for program in ${main_program} ${external_libraries} ; do
    nm -D ${program} | cut -d " " -f 3 | sort | uniq | grep -E "($whitelist_functions)" | while read line ; do 
    echo "  Whitelist function match: $line"
    echo -e "\"$line\"," >> $header
done
done

echo "};" >> $header

cat << EOF >> $header
static const char * blacklist[] = {
EOF

echo "Outputting blacklisted matches from $blacklist_functions ..."

for program in ${main_program} ${external_libraries} ; do
    nm -D ${program} | cut -d " " -f 3 | sort | uniq | grep -E "($blacklist_functions)" | while read line ; do 
    echo "  Blacklist function match: $line"
    echo -e "\"$line\"," >> $header
done
done

echo "};" >> $header 

cat << EOF >> $header
static const char * programs[] = {
EOF

for lib in $external_libraries ; do
    echo -e "\"$lib\"," >> $header
done

echo "};" >> $header 

cat << EOF >> $header

/*
 * Which white listed functions, blacklisted functions and 
 * additional, external libraries (if any) are to be loaded while the
 * program is being traced?
 */
static const char * output_trace_filename = 
EOF

echo "     \"$trace_file\";" >> $header
